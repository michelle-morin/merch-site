{"version":3,"sources":["components/Header.js","components/Footer.js","components/ReusableForm.js","components/NewItemForm.js","components/Item.js","components/ItemList.js","components/ItemDetail.js","components/EditItemForm.js","components/ItemControl.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","style","position","top","left","height","backgroundColor","width","color","className","href","Footer","display","justifyContent","padding","bottom","class","ReusableForm","props","margin","marginBottom","onSubmit","formSubmissionHandler","src","alt","type","name","placeholder","required","buttonText","NewItemForm","event","preventDefault","onNewItemCreation","target","value","description","quantity","id","v4","Item","border","textAlign","marginTop","onClick","whenBuyClicked","whenRestockClicked","whenItemClicked","ItemList","itemList","map","item","onItemSelection","onClickingBuy","onClickingRestock","key","ItemDetail","onClickingDelete","onClickingEdit","EditItemForm","console","log","onEditItem","ItemControl","handleClick","state","selectedItem","setState","formVisibleOnPage","editing","prevState","handleEditClick","handleEditingItemInList","itemToEdit","editedMasterItemList","masterItemList","filter","concat","handleItemPurchase","currentlySelectedItem","newQuantityOfItem","updatedItem","previousItemList","handleItemRestock","parseInt","handleDeletingItem","newMasterItemList","handleChangingSelectedItem","handleAddingNewItemToList","newItem","currentlyVisibleState","this","overflowY","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e15f8929.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n\n  const headerStyles = {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    height: '30vh',\n    backgroundColor: '#7FBC76',\n    width: '100%',\n    color: '#f5f5f5'\n  }\n\n  return (\n    <React.Fragment>\n      <div style={headerStyles}>\n        <div className=\"navigation\">\n          <a href=\"#\">Home</a>\n          <a href=\"#\">About Us</a>\n          <a href=\"#\">Partners</a>\n          <a href=\"#\">Products</a>\n        </div>\n        <div className=\"brand-section\">\n          <h1>Earth<span className=\"merch\">Merch</span></h1>\n          <div className=\"mission-statement\">\n            <p>Our mission? To build the worldâ€™s largest environmental movement to drive transformative change for people and planet.</p>\n            <p>We take time and care to consider where and how things are made, who makes them and what they are made out of.</p>\n            <p>We support local designers, women, minority and family owned businesses and small makers and manufacturers.</p>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer(){\n\n  const footerStyles = {\n    backgroundColor: '#1A285A',\n    width: '100%',\n    color: '#f5f5f5',\n    display: 'flex',\n    justifyContent: 'space-around',\n    padding: '2%',\n    position: 'fixed',\n    bottom: '0',\n    left: '0'\n  }\n\n  return(\n    <React.Fragment>\n    <div style={footerStyles}>\n      <h3>Earth<span class=\"merchFooter\">Merch</span></h3>\n      <h4>&copy; Michelle Morin, Benjamin Thom, Brandan Sayarath</h4>\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ReusableForm(props) {\n\n  const formStyles = {\n    width: '40vw',\n    margin: 'auto auto',\n    backgroundColor: 'transparent',\n    padding: '5%',\n    marginBottom: '2%'\n  }\n\n  return (\n    <React.Fragment>\n      <div style={formStyles}>\n        <form onSubmit={props.formSubmissionHandler}>\n          <img src=\"https://img.icons8.com/metro/26/000000/pencil.png\" alt='pencil icon' />\n            <input\n              type='text'\n              name='name'\n              placeholder='item name' required />\n            <input\n              type='text'\n              name='description'\n              placeholder='item description' required />\n            <input\n              type='number'\n              name='quantity'\n              placeholder='initial quantity' required />\n            <button className=\"formButton\" type='submit'>{props.buttonText}</button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string\n};\n\nexport default ReusableForm;","import React from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport ReusableForm from './ReusableForm';\n\nfunction NewItemForm(props){\n\n  function handleNewItemFormSubmission(event) {\n    event.preventDefault();\n    props.onNewItemCreation({\n      name: event.target.name.value, \n      description: event.target.description.value, \n      quantity: event.target.quantity.value,\n      id: v4()\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleNewItemFormSubmission}\n        buttonText=\"add item\" />\n    </React.Fragment>\n  );\n}\n\nNewItemForm.propTypes = {\n  onNewItemCreation: PropTypes.func\n}\n\nexport default NewItemForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Item(props){\n\n  const itemStyles = {\n    height: '200px',\n    width: '150px',\n    border: '1px solid #82CA81',\n    textAlign: 'center',\n    padding: '2%',\n    marginBottom: '1em',\n    marginTop: '1em'\n  }\n\n  function inStock(count) {\n    return count > 0 ? <button className=\"buy-button\" onClick={()=> props.whenBuyClicked(props.id)} type=\"submit\">Buy</button>\n    : <p>sold out!</p>\n  }\n\n  return (\n    <React.Fragment>\n      <div style={itemStyles}>\n        <p>{props.name}</p>\n        <p>{props.description}</p>\n        <p>Quantity: {props.quantity}</p>\n        {inStock(props.quantity)}\n        <div className=\"buttons\">\n          <button onClick={()=> props.whenRestockClicked(props.id)} type=\"submit\">Restock</button> \n          <button onClick = {() => props.whenItemClicked(props.id)}>Details</button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  quantity: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  whenItemClicked: PropTypes.func,\n  whenBuyClicked: PropTypes.func,\n  whenRestockClicked: PropTypes.func\n}\n\nexport default Item;","import React from 'react';\nimport Item from './Item';\nimport PropTypes from 'prop-types';\n\nfunction ItemList(props){\n  return (\n  <React.Fragment>\n      {props.itemList.map((item) => \n        <Item \n          whenItemClicked = {props.onItemSelection}\n          whenBuyClicked = {props.onClickingBuy}\n          whenRestockClicked={props.onClickingRestock}\n          name={item.name}\n          description={item.description}\n          quantity={item.quantity}\n          id={item.id}\n          key={item.id}/>\n      )}\n    </React.Fragment>\n  );\n}\n\nItemList.propTypes = {\n  itemList: PropTypes.array,\n  onItemSelection: PropTypes.func,\n  onClickingRestock: PropTypes.func\n};\n\nexport default ItemList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ItemDetail(props){\n  const { item, onClickingDelete } = props;\n\n  return (\n    <React.Fragment>\n      {/* <div style={itemDetailStyles}> */}\n        <h1>{item.name}</h1>\n        <p>{item.description}</p>\n        <p>{item.quantity}</p>\n        <button onClick={()=> onClickingDelete(item.id)}>Remove Item</button>\n        <button onClick={ props.onClickingEdit }>Update Item Details</button>\n      {/* </div> */}\n    </React.Fragment>\n  );\n}\n\nItemDetail.propTypes = {\n  item: PropTypes.object,\n  onClickingDelete: PropTypes.func,\n  onClickingEdit: PropTypes.func\n};\n\nexport default ItemDetail;","import React from 'react';\nimport ReusableForm from './ReusableForm';\nimport PropTypes from 'prop-types';\n\nfunction EditItemForm(props){\n  const { item } = props;\n\n  function handleEditItemFormSubmission(event){\n    event.preventDefault();\n    console.log(\"reached handle edit item form submission function\");\n    props.onEditItem({\n      name: event.target.name.value,\n      description: event.target.description.value,\n      quantity: event.target.quantity.value,\n      id: item.id\n    });\n  }\n  \n  return( \n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleEditItemFormSubmission}\n        buttonText=\"Update Item Details\" />\n    </React.Fragment>\n  );\n}\n\nEditItemForm.propTypes = {\n  onEditItem: PropTypes.func\n}\n\nexport default EditItemForm;","import React from 'react';\nimport NewItemForm from './NewItemForm.js';\nimport ItemList from './ItemList.js';\nimport ItemDetail from './ItemDetail';\nimport EditItemForm from './EditItemForm';\n\nclass ItemControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      masterItemList: [],\n      selectedItem: null,\n      editing: false\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.selectedItem !== null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedItem: null,\n        editing: false\n      });\n    } else {\n      this.setState(prevState => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage\n      }));\n    }\n  }\n\n  handleEditClick = () => {\n    console.log(\"handleEditClick reached!\");\n    this.setState({editing: true});\n  }\n\n  handleEditingItemInList = (itemToEdit) => {\n    console.log(\"reached handle editing item in list\");\n    const editedMasterItemList = this.state.masterItemList\n      .filter(item => item.id !== this.state.selectedItem.id)\n      .concat(itemToEdit);\n    this.setState({\n      masterItemList: editedMasterItemList,\n      editing: false,\n      selectedItem: null\n    });\n  }\n\n  handleItemPurchase = (id) => {\n    const currentlySelectedItem = this.state.masterItemList.filter(item => item.id === id)[0];\n    const newQuantityOfItem = currentlySelectedItem.quantity - 1;\n    const updatedItem = {...currentlySelectedItem, quantity: newQuantityOfItem};\n    const previousItemList = this.state.masterItemList.filter(item => item.id !== id);\n    this.setState({\n      masterItemList: [...previousItemList, updatedItem],\n      selectedItem: null\n    });\n  }\n\n  handleItemRestock = (id) => {\n    const currentlySelectedItem = this.state.masterItemList.filter(item => item.id === id)[0];\n    const newQuantityOfItem = parseInt(currentlySelectedItem.quantity) + 10;\n    const updatedItem = {...currentlySelectedItem, quantity: newQuantityOfItem};\n    const previousItemList = this.state.masterItemList.filter(item => item.id !== id);\n    this.setState({\n      masterItemList: [...previousItemList, updatedItem],\n      selectedItem: null\n    });\n  }\n\n  handleDeletingItem = (id) => {\n    const newMasterItemList = this.state.masterItemList.filter(item => item.id !== id);\n    this.setState({\n      masterItemList: newMasterItemList,\n      selectedItem: null\n    });\n  }\n\n  handleChangingSelectedItem = (id) => {\n    const selectedItem = this.state.masterItemList.filter(item => item.id === id)[0];\n    this.setState({selectedItem: selectedItem}); \n  }\n\n  handleAddingNewItemToList = (newItem) => {\n    const newMasterItemList = this.state.masterItemList.concat(newItem);\n    this.setState({\n      masterItemList: newMasterItemList,\n      formVisibleOnPage: false\n    });\n  }\n\n  render(){\n\n    const itemControlStyles = {\n      position: 'relative',\n      top: '30vh',\n      margin: '2%',\n      overflowY: 'auto'\n    }\n\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    \n    if (this.state.editing) {\n      currentlyVisibleState = <EditItemForm \n        item = {this.state.selectedItem}\n        onEditItem = {this.handleEditingItemInList} />\n      buttonText = \"return to items\";\n    } else if (this.state.selectedItem != null) {\n      currentlyVisibleState = <ItemDetail \n        item = {this.state.selectedItem} \n        onClickingDelete = {this.handleDeletingItem}\n        onClickingEdit = {this.handleEditClick} />\n      buttonText = \"return to items\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = <NewItemForm \n        onNewItemCreation={this.handleAddingNewItemToList}/>\n      buttonText = \"return to items\";\n    } else {\n      currentlyVisibleState = <ItemList \n        itemList={this.state.masterItemList} \n        onItemSelection={this.handleChangingSelectedItem}\n        onClickingBuy={this.handleItemPurchase}\n        onClickingRestock={this.handleItemRestock} />\n      buttonText = \"+\";\n    }\n\n    return (\n      <React.Fragment>\n        <div style={itemControlStyles}>\n          <div className=\"adjustableButton\">\n            <button onClick={this.handleClick}>{buttonText}</button>\n          </div>\n          <div className=\"storeFront\">\n            {currentlyVisibleState}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ItemControl;","import React from 'react';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport ItemControl from './ItemControl.js';\nimport './../App.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header/>\n      <ItemControl/>\n      <Footer/>\n    </React.Fragment>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}